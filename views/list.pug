extends layout

block content
	head 
		script.
			//ファイル名を処理する関数。ユーザー名、ファイル名、拡張子名に分割してarrayを返す。
			function filename_split(filename){
				//アンダーバー、".fa"でファイル名をsplit。
				var split_underbar = filename.split("_");
				var split_fa = filename.split(".fa");

				//ユーザー名はアンダーバーでsplitしたものの第1項、拡張子は".fa"でsplitしたものの最終項+"fa"。ファイル名は全体からそれらを削ったもの。
				var username = split_underbar[0];
				var extention = "fa" + split_fa[split_fa.length - 1];
				var original_filename = filename.slice(username.length + 1).slice(0, -1-extention.length);

				return [username, original_filename, extention];
			}

			//nucleotideチェックボックスの"Select All"ボタンの挙動
			function dselectall(){
				//チェックボックスの要素取得
				let dcheckelement = document.getElementsByClassName("dcheckbox");

				//チェックが入っているチェックボックスを配列に格納
				let dcheckarray = [];
				for(let i = 0; i < dcheckelement.length; i++)
				{
					if(dcheckelement[i].checked)
						dcheckarray.push(dcheckelement[i].value);
				}

				//全てのチェックボックスにチェックが入っていた場合のみ、ボタンを押すとチェックがすべて外れる。
				//それ以外の場合、全てのチェックボックスにチェックを付ける。
				if(dcheckarray.length==dcheckelement.length)
					for(let i = 0; i < dcheckelement.length; i++)
						dcheckelement[i].checked = false;
				else 
					for(let i = 0; i < dcheckelement.length; i++)
						dcheckelement[i].checked = true;
				
				//全選択した場合、proteinの表示を消す。
				ptoggle();
				}

			//proteinチェックボックスの"Select All"ボタンの挙動
			function pselectall(){
				//チェックボックスの要素取得
				let pcheckelement = document.getElementsByClassName("pcheckbox");

				//チェックが入っているチェックボックスを配列に格納
				let pcheckarray = [];
				for(let i = 0; i < pcheckelement.length; i++)
				{
					if(pcheckelement[i].checked)
						pcheckarray.push(pcheckelement[i].value);
				}

				//全てのチェックボックスにチェックが入っていた場合のみ、ボタンを押すとチェックがすべて外れる。
				//それ以外の場合、全てのチェックボックスにチェックを付ける。
				if(pcheckarray.length==pcheckelement.length)
					for(let i = 0; i < pcheckelement.length; i++)
						pcheckelement[i].checked = false;
				else 
					for(let i = 0; i < pcheckelement.length; i++)
						pcheckelement[i].checked = true;
				
				//全選択した場合、nucleotideの表示を消す。
				dtoggle();
				}

			//nucleotideチェックボックスにチェックが入ったとき、proteinリストを非表示にする。
			function ptoggle(){
				//nucleotideチェックボックスとproteinリスト要素の取得
				let dcheckelement = document.getElementsByClassName("dcheckbox");
				let plisttable = document.getElementById("plisttable");

				//nucleotideチェックボックスを一つ一つ確認して、一つでもチェックされていたらproteinリストを非表示にする。
				for(let i= 0; i < dcheckelement.length; i++)
				{
					if(dcheckelement[i].checked)
					{
						plisttable.style.visibility = "hidden" ;
						break;
					}
					else 
						plisttable.style.visibility = "visible" ;
				}
				color();
			}

			//proteinチェックボックスにチェックが入ったとき、nucleotideリストを非表示にする。
			function dtoggle(){
				//proteinチェックボックスとproteinリスト要素の取得
				let pcheckelement = document.getElementsByClassName("pcheckbox");
				let dlisttable = document.getElementById("dlisttable");

				//proteinチェックボックスを一つ一つ確認して、一つでもチェックされていたらnucleotideリストを非表示にする。
				for(let i = 0; i < pcheckelement.length; i++)
				{
					if(pcheckelement[i].checked)
					{
						dlisttable.style.visibility = "hidden" ;
						break;
					}
					else
						dlisttable.style.visibility = "visible" ;
				}
				color();
			}

			//nucleotideファイルのrenameボタンが押されたときの挙動
			function drename(file){
				//ファイル名をボタンIDから取得し、ユーザー名・ファイル名・拡張子名に分割
				var dname = file.id.slice(7);
				var file_info = filename_split(dname);

				//renameフォームの表示。
				var henkan = "<input type = 'hidden', name = 'drenamebefore', value = " + dname + "><p id = 'drenamedialogtext'>Rename the file.</p><input type = 'text', name = 'drenameafter', value = " + file_info[1] + "><p id = 'extension'>." + file_info[2]  + "<button type = 'submit', id = 'renamesubmit'>Rename</button><button type = 'button', id = 'renamecancel', onclick = 'cancel()'>Cancel</button>"
				document.getElementById("drename1").innerHTML = henkan;
			}

			//proteinファイルのrenameボタンが押されたときの挙動
			function prename(file){
				//ファイル名をボタンIDから取得し、ユーザー名・ファイル名・拡張子名に分割
				var pname = file.id.slice(7);
				var file_info = filename_split(pname);

				//renameフォームの表示
				var henkan = "<input type = 'hidden', name = 'prenamebefore', value = " + pname + "><p id = 'prenamedialogtext'>Rename the file.</p><input type = 'text', name = 'prenameafter', value = " + file_info[1] + "><p id = 'extension'>." + file_info[2] + "<button type = 'submit', id = 'renamesubmit'>Rename</button><button type = 'button', id = 'renamecancel', onclick = 'cancel()'>Cancel</button>"
				document.getElementById("prename1").innerHTML = henkan;
			}

			//renameフォームのキャンセルボタンが押されたときの挙動
			function cancel(){
				//renameフォームのコードを非表示に書き換える。
				document.getElementById("drename1").innerHTML = "<input type = 'hidden', id = 'drename1'>"
				document.getElementById("prename1").innerHTML = "<input type = 'hidden', id = 'prename1'>"
			}

			//チェックされた要素の背景をグレーにする
			function color(){
				//nucleotide・proteinのチェックボックス・カラム全要素を取得
				var dcheckelement = document.getElementsByClassName("dcheckbox");
				var pcheckelement = document.getElementsByClassName("pcheckbox");
				var delement = document.getElementsByClassName("dtr");
				var pelement = document.getElementsByClassName("ptr");

				//チェックが入っていれば、カラムの背景をグレーに変える
				for(let i = 0; i < dcheckelement.length; i++)
				{
					if(dcheckelement[i].checked)
						delement[i].style.backgroundColor = "darkgray";
					else 
						delement[i].style.backgroundColor = "white";
				}
				for(let i = 0; i < pcheckelement.length; i++) 
				{
					if(pcheckelement[i].checked)
						pelement[i].style.backgroundColor = "darkgray";
					else 
						pelement[i].style.backgroundColor = "white";
				}
			}

			function to_upload(){

			}



	body
		div
			h2 DATABASE
			tr 	
				form(action="/list", method="post")
					td.to_upload  
						button.to_upload(type="submit", name="upload") Upload Files
					td.to_seqserver 
						button.to_seqserver(type="button", onclick="window.open('http://suikou.fs.a.u-tokyo.ac.jp:4567/')") Sequence Server
		div.dlisttable(id="dlisttable")
			form(action="/list", method="post") 
				table
					tr
						th(colspan="4", class="listtable_title") Nucleotide 
					tr
						th.listtable_checkbox
						th.listtable_namae 
							p Item
						th.listtabel_rename 
						th.listtable_user
							p User

					- for(var i = 0; i < duser.length; i++)
						- var dname = duser[i] + "_" + dnamae[i] + "." + dextension[i];
						if i!=0 && duser[i]==duser[i-1] && dnamae[i]==dnamae[i-1]
							- var did = "dsubmenu";
						else 
							-var did = "dmainmenu";

						tr(class=[did, "d" + duser[i] +"_"+ dnamae[i], "dtr"])
							td.listtable_checkbox
								input.dcheckbox(type="checkbox", name="dcheckbox"  , id="dcheck" + dname , value=dname, onclick="ptoggle()")
							td.listtable_namae
								label.listlabel_namae(for="dcheck"+dname) #{dnamae[i]}
							td.listtable_rename
								button(type="button", id="dbutton" + dname, onclick="drename(this);") Rename 	
							td.listtable_user
								label(for="dcheck"+dname) #{duser[i]}
							

				input.submit(type="submit", name="dremove", value="Remove")
			
			button.listtable_selectall(onclick="dselectall()") Select All

		div.plisttable(id="plisttable")
			form(action="/list", method="post")
				table
					tr
						th(colspan="4", class="listtable_title") Protein 
					tr
						th.listtable_checkbox
						th.listtable_namae 
							p Item
						th.listtable_rename 
						th.listtable_user
							p User

					- for(var i = 0; i < puser.length; i++)
						- var pname = puser[i] + "_" + pnamae[i] + "." + pextension[i];
						if(i != 0 && puser[i] == puser[i-1] && pnamae[i] == pnamae[i-1])
							- var pid = "psubmenu"
						else 
							- var pid = "pmainmenu"

						tr(class=[pid, "p" + puser[i] +"_"+ pnamae[i], "ptr"])
							td.listtable_checkbox
								input.pcheckbox(type="checkbox", name="pcheckbox"  , id="pcheck" + pname , value=pname, onclick="dtoggle()") 
							td.listtable_namae
								label(for="pcheck"+pname) #{pnamae[i]}   
							td.listlabel_rename
								button(type="button", id="pbutton" + pname, onclick="prename(this);") Rename
							td.listtable_user
								label(for="pcheck"+pname) #{puser[i]}
				input.submit(type="submit", name="premove", value="Remove")
			
			button.listtable_selectall(onclick="pselectall()") Select All

			form(name="drename1", id="drename1", action = "/list", method = "post")
				input(type = "hidden", id = "drename2")

			form(name="prename1", id="prename1", action = "/list", method = "post")
				input(type = "hidden", id = "prename2")

